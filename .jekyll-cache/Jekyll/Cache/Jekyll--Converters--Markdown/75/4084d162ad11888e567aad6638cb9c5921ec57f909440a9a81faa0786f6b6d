I"y <p><img src="https://velog.velcdn.com/images/-__-/post/662ff23d-608f-4f8e-becb-4cdf59a1dffc/image.png" alt="" /></p>

<h3 id="해시함수">해시함수</h3>

<ul>
  <li>
    <p>해싱(Hashing) 은 다양한 크기의 <strong>입력값</strong>을 / 고정된 크기의 <strong>출력값</strong>으로 생성해 내는 과정이다</p>
  </li>
  <li>
    <p>암호 해시 함수는 블록체인 및 다양한 분산 시스템에 데이터 <strong>‘무결성’</strong>과 <strong>‘보안’</strong>을 <strong>보장하는 데 사용</strong>된다</p>
  </li>
</ul>

<p>👉 <strong>기존의 해싱</strong>은 <code class="language-plaintext highlighter-rouge">데이터베이스 조회 / 파일 분석 / 데이터 관리</code> 등에 사용되어왔다</p>

<p>👉 <strong>암호 해시 함수</strong>는 <code class="language-plaintext highlighter-rouge">메시지 인증 / 디지털 서명</code> 등 보안 어플리케이션에서 사용될 수 있다</p>

<p><img src="https://velog.velcdn.com/images/-__-/post/c6fea596-99c1-42e6-8bf7-0e1795ff1785/image.png" alt="" /></p>

<blockquote>
  <p>해시 함수는 <strong>어떠한 크기의 입력</strong>이 들어와도 <span style="background-color:#FFC701; color:#000;"><strong>‘동일한 크기의 출력’</strong>을 뱉는 함수다</span></p>
</blockquote>

<p><img src="https://velog.velcdn.com/images/-__-/post/5c435933-5027-4a91-92cb-aebf1f361fbc/image.png" alt="" /></p>

<blockquote>
  <p><strong>‘SHA-256 알고리즘’</strong>은 어떤 입력값을 넣어도 256 비트 길이의 값을 출력한다</p>
</blockquote>

<p><img src="https://velog.velcdn.com/images/-__-/post/dbcc3a95-ea21-4d19-a852-983514a78b9a/image.png" alt="" /></p>

<hr />

<h3 id="블록체인에서-해싱의-역할">블록체인에서 해싱의 역할</h3>

<ul>
  <li><strong>암호 해시 함수</strong>는 암호화폐 프로토콜에서 가장 중요한 기술 중 하나이다
👉 사용자에게 <strong>익명성을 보장</strong>하고
👉 트랜잭션을 <strong>하나로 연결</strong> &amp; <strong>압축</strong>하며
👉 <strong>블록을 연결</strong>하는 동시에 그 <strong>무결성을 보장</strong>하는 역할을 한다</li>
</ul>

<blockquote>
  <h3 id="해시값을-사용해-익명성-보장">해시값을 사용해 익명성 보장</h3>
</blockquote>

<ul>
  <li>공개키를 해싱한 값을 지갑 주소로 사용하여 거래를 <strong>익명화</strong>할 수 있다</li>
  <li>트랜잭션 기록에는 해시값으로 암호화된 지갑 주소와 송금 및 잔액을 <span style="background-color: #FFC701; color:#000;"><strong>확인할 수 있을 뿐</strong>, 해당 지갑의 주인이 누구인지 파악할 수 없다</span></li>
</ul>

<h3 id="무결성-검증">무결성 검증</h3>

<p>블록체인에서 해시 함수를 사용해 <strong>무결성을 검증</strong>하는 경우는 두가지</p>

<ul>
  <li>이전 블록의 값을 해싱한 값을 사용해 <strong>이전 블록을 가리킵</strong>니다.
만약 <u>이전 블록을 **해싱한 값이 달라진 경우**</u> 해당 블록 또는 가리키고 있던 <span style="background-color: #FFC701; color:#000;">이전 블록에 위변조가 일어났음을 알 수 있다</span></li>
  <li>블록에 저장된 모든 트랜잭션을 <strong>‘머클 트리’</strong> 알고리즘을 사용해 하나의 해시값으로 저장한다
만약 트랜잭션이 <strong>하나라도 변한 경우</strong>, <strong>블록에 저장된 해시값도 변경</strong>됩니다.</li>
</ul>

<h3 id="해시값을-사용해-채굴-노드를-정함">해시값을 사용해 채굴 노드를 정함</h3>

<ul>
  <li>비트코인에서는 <strong>PoW(작업 증명) 방식</strong>을 사용해 어떤 노드가 <strong>블록을 만들지 정한다</strong></li>
  <li><strong>작업 증명 방식(PoW)</strong>에서는 특정 조건을 만족하는 해시값을 만족하기위해 <span style="background-color: #FFC701; color:#000;">입력값인 <strong>논스(Nonce)</strong>를 찾아야 한다</span></li>
  <li>가장 먼저 찾는 노드에게 <strong>‘블록을 채굴할 권한’</strong>을 주며 채굴에 대한 보상으로 <strong>비트코인을 제공한다</strong>
<img src="https://velog.velcdn.com/images/-__-/post/83a10371-0204-419e-9a5d-51467e4109aa/image.png" alt="" /></li>
</ul>

<hr />

<h3 id="암호-해시-함수">암호 해시 함수</h3>

<ul>
  <li>블록체인에서 사용되는 해시 함수는 <strong>‘단방향’ 알고리즘</strong>을 사용하고,</li>
  <li>입력값이 조금만 달라져도 <span style="background-color: #FFC701; color:#000;">아예 다른 형태로 변하기 때문에,</span></li>
  <li>해싱된 값을 이용하여 기존의 값을 찾기란 <strong>매우 어렵다</strong></li>
</ul>

<blockquote>
  <h3 id="충돌">충돌</h3>

  <p>만약에 서로 다른 입력값을 해시 함수에 넣었는데
<u>**동일한 출력값**을 내뱉는 경우</u>도 있는데, 이를 <span style="background-color: #E35BE5; color:#fff;">충돌</span>이라 한다<br /> &gt; <strong>충돌</strong>은 시스템에 <u>심각한 위협</u>이 될 수 있기 때문에
충돌은 <u>해시 함수를 만들 때 가장 중요한</u> 요소 중 하나로 작용한다</p>
</blockquote>

<p>암호 해시 함수의 안전성을 평가하는 요소는 3가지이다</p>

<ul>
  <li>충돌 저항성</li>
  <li>역상 저항성</li>
  <li>제2 역상 저항성</li>
</ul>

<hr />

<h3 id="충돌-저항성">충돌 저항성</h3>

<ul>
  <li>
    <p>충돌 저항성은 어떤 해시 함수가 충돌하는
서로 다른 두 입력값을 가지고 있는지 <strong>발견되지 않은 상태</strong>를 의미한다
👉 <span style="background-color:#BFA8EE; color:#000;">마치 <strong>‘사람의 지문’</strong>과 같다</span></p>
  </li>
  <li>지문은 완전히 같을 <strong>확률이 매우 적기</strong> 때문에,
사람을 식별할 때 주민번호를 일일이 입력하는 대신 지문을 사용할 수 있다</li>
  <li>사실상 해시 함수의 입력값은 그 <strong>‘길이와 종류가 무한’</strong>하지만,
<strong>‘입력값은 유한’</strong>하기 때문에 누군가가 <u>충돌하는 두 입력값을 발견할 가능성</u>이 있다</li>
</ul>

<hr />

<h3 id="역상-저항성">역상 저항성</h3>

<ul>
  <li>역상 저항성은 어떤 해시 함수가 특정한 값을 출력하는 입력값을
찾을 <strong>‘확률이 매우 낮을 경우’</strong>를 의미한다 (단방향 함수의 성질)</li>
  <li>
    <p><span style="background-color:#BFA8EE; color:#000;">단방향 함수</span>는 입력값을 👉 통해 출력값을 <strong>얻을 수는 있지만</strong>,
출력값을 👉 통해 입력값을 <strong>얻을 수는 없는</strong> 함수이다</p>
  </li>
  <li>역상 저항성은 <strong>데이터를 보호</strong>하는 데 매우 유리하다</li>
  <li>메시지의 해시값을 사용하면 해당 메시지의 <strong>‘원본’</strong>을 공개하지 않고도 <strong>진위성을 검증</strong>할 수 있다<br />
⭐ ex) <strong>패스워드</strong>에 대한 진위성을 검증할 때
패스워드 원문을 비교하지 않고,
패스워드를 해싱한 값을 사용하여 패스워드가 <strong>노출되는 것을 방지</strong>한다</li>
</ul>

<hr />

<h3 id="제2-역상-저항성">제2 역상 저항성</h3>

<ul>
  <li>제2 역상 저항성은 <strong>‘충돌 저항성’</strong> &amp; <strong>‘역상 저항성’</strong>이 복합적으로 작용한 경우이다 <br />
⭐ ex) A라는 입력값의 해시값과 / 동일한 해시값을 내는 B 입력값을
누군가가 알고 있지 않은 경우이다
반대로 이 B 입력값을 누군가가 발견한 경우 <strong>제2 역상 공격</strong>이 가능하다</li>
</ul>

<blockquote>
  <h3 id="제2-역상-공격">제2 역상 공격</h3>

  <p>제2 역상 공격은 <strong>A 입력값</strong>을 👉 통해 <strong>A1 라는 해시값</strong>이 나왔을 때,
<strong>A1 해시값을 출력</strong>하게 만드는 👉 <strong>B 입력값</strong>을 찾는 것입니다.
따라서 제2 역상 저항성은 <u>충돌 저항성이 전제</u>되어야 한다</p>
</blockquote>

<hr />
:ET