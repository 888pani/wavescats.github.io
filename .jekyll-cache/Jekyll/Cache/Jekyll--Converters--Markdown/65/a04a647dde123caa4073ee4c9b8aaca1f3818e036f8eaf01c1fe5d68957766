I" 2<p><img src="https://velog.velcdn.com/images/-__-/post/7dbbe54d-4b7a-4b9c-808a-da9174f30a59/image.png" alt="" /></p>

<p><img src="https://velog.velcdn.com/images/-__-/post/06272533-d49e-479a-9bbc-6e416b4fa553/image.png" alt="" /></p>

<p><strong>무한스크롤</strong> 의 구현방식은 여러가지 입니다</p>

<p>(infinite-scroll-component / intersection-observer / 스크롤 위치 감지 등)</p>

<p>저는 스크롤 위치가 <strong>‘scrollHeight’</strong> 의 맨 끝 지점(100) 에 왔을때<br />
서버에서 데이터를 10개씩 추가로 불러오는 방식을 구현해봤습니다</p>

<hr />

<h3 id="1-서버에서-데이터-받아오기">1. 서버에서 데이터 받아오기</h3>

<p><img src="https://velog.velcdn.com/images/-__-/post/c6a3090d-03c9-4ddb-a7c4-936086faef9f/image.png" alt="" /></p>

<blockquote>
  <p>1-1. <strong>fetch</strong> 또는 <strong>Axios</strong> 를 이용하여 서버에서 데이터를 받아오고<br />
1-2. useState 빈배열을 <strong>‘두개 생성’</strong> 합니다<br />
1-3. 배열 하나는 데이터를 <strong>보여주고</strong><br />
1-4. 배열 하나는 남은 데이터를 <strong>저장하는</strong> 용도입니다</p>
</blockquote>

<hr />

<h3 id="2-저장소에서-데이터-꺼내오기">2. 저장소에서 데이터 꺼내오기</h3>

<p><img src="https://velog.velcdn.com/images/-__-/post/d9809590-a3ca-4962-8206-a37a3daf2a70/image.png" alt="" /></p>

<blockquote>
  <p>👆 스크롤이 <strong>목표위치</strong> 에 도달했을때 서버에서 데이터를 추가로 받아오는 함수<br /></p>

  <p>2-1. 저장된 데이터가 <strong>0개</strong> 가 아닐경우 실행<br />
2-2. 배열에 담긴 값을 10개씩 꺼내서 <strong>출력</strong> (몇개씩 출력할지는 셋팅)</p>
</blockquote>

<hr />

<h3 id="3-스크롤-위치-감지">3. 스크롤 위치 감지</h3>

<p><img src="https://velog.velcdn.com/images/-__-/post/157a290a-a9f3-4880-8dc2-60a1a96b45b7/image.png" alt="" /></p>

<p><img src="https://velog.velcdn.com/images/-__-/post/d3123747-7395-4524-865e-0606f174a117/image.png" alt="" /></p>

<blockquote>
  <p>👆 스크롤의 <strong>위치를 감지</strong>하고 조건에 만족하면 데이터를 <strong>꺼내오는</strong> 함수를 실행<br /></p>

  <p>⭐ <strong>scrollTop + clientHeight &gt;= scrollHeight</strong></p>
</blockquote>

<hr />

<h3 id="4-스크롤-이벤트-등록--삭제">4. 스크롤 이벤트 등록 &amp; 삭제</h3>

<p><img src="https://velog.velcdn.com/images/-__-/post/5567e533-8f9a-455c-88c5-e6a2ff5a9204/image.png" alt="" /></p>

<blockquote>
  <p>스크롤 위치를 감지할때마다 이벤트를 실행하고 &amp; 삭제<br /></p>

  <p><strong>addEventListener</strong> / <strong>removeEventListener</strong></p>
</blockquote>

<hr />

<h3 id="5-무한스크롤-구현">5. 무한스크롤 구현</h3>

<p><img src="https://velog.velcdn.com/images/-__-/post/1be1d703-26bf-4365-a3f2-c1338eec13a2/image.gif" alt="" /></p>

<blockquote>
  <p>10개씩 데이터를 불러오는 <strong>무한스크롤</strong></p>
</blockquote>

<hr />

<blockquote>
  <h3 id="무한스크롤-구현에-성공한-코드-">무한스크롤 구현에 성공한 코드 👇</h3>
</blockquote>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="p">[</span><span class="nx">poolList</span><span class="p">,</span> <span class="nx">setPoolList</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">([]);</span>
<span class="kd">const</span> <span class="p">[</span><span class="nx">savePoolList</span><span class="p">,</span> <span class="nx">setSavePoolList</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">([]);</span>
<span class="kd">const</span> <span class="p">[</span><span class="nx">isLoading</span><span class="p">,</span> <span class="nx">setIsLoading</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>

<span class="nx">useEffect</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">poolData</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">setIsLoading</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span> <span class="c1">// 데이터를 불러오는중에는 로딩중 표시</span>
    <span class="nx">fetch</span><span class="p">(</span>
      <span class="dl">"</span><span class="s2">https://gateway.pinata.cloud/ipfs/QmNYomgBofjWrYkkdWQA2KTqkv8HxMe3iwFsYScGCkX16K</span><span class="dl">"</span>
    <span class="p">)</span>
      <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">())</span>
      <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">list</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="nx">setPoolList</span><span class="p">(</span><span class="nx">list</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">));</span> <span class="c1">// 서버에서 데이터를 10개만 보여주고</span>
        <span class="nx">setSavePoolList</span><span class="p">(</span><span class="nx">list</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">10</span><span class="p">));</span> <span class="c1">// 보여주는 데이터 10개 제외한 나머지는 빈배열에 저장</span>
        <span class="nx">setIsLoading</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span> <span class="c1">// 데이터를 다 불러왔으면 로딩중 끝</span>
      <span class="p">});</span>
  <span class="p">};</span>
  <span class="nx">poolData</span><span class="p">();</span>
<span class="p">},</span> <span class="p">[]);</span>

<span class="kd">const</span> <span class="nx">poolSaveData</span> <span class="o">=</span> <span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="c1">// 서버에서 데이터를 추가로 받아오는 함수 (비동기처리)</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">savePoolList</span><span class="p">.</span><span class="nx">length</span> <span class="o">!==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// useState 배열에 저장된 길이가 0이 아닐경우 실행</span>
    <span class="nx">setIsLoading</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span> <span class="c1">// 데이터를 불러오는중에는 로딩중 표시</span>
    <span class="nx">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="c1">// 바로 실행하지말고 1초 뒤에 실행시키기</span>
      <span class="nx">setPoolList</span><span class="p">([...</span><span class="nx">poolList</span><span class="p">,</span> <span class="p">...</span><span class="nx">savePoolList</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">)]);</span>
      <span class="c1">// 서버에 담긴 값, 저장된 데이터 10개 꺼내기</span>
      <span class="nx">setSavePoolList</span><span class="p">(</span><span class="nx">savePoolList</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">10</span><span class="p">));</span> <span class="c1">// 저장된 데이터 10개 출력</span>
      <span class="nx">setIsLoading</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span> <span class="c1">// 데이터를 다 불러왔으면 로딩중 끝</span>
    <span class="p">},</span> <span class="mi">1000</span><span class="p">);</span> <span class="c1">// 👉 1초</span>
  <span class="p">}</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="nx">infiniteScroll</span> <span class="o">=</span> <span class="nx">useCallback</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="c1">//스크롤 높이를 감지해서 👉 조건에 만족하면 poolSaveData 함수 호출</span>
  <span class="kd">let</span> <span class="nx">scrollHeight</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span>
    <span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollHeight</span><span class="p">,</span>
    <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollHeight</span>
  <span class="p">);</span>
  <span class="kd">let</span> <span class="nx">scrollTop</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span>
    <span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">,</span>
    <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollTop</span>
  <span class="p">);</span>
  <span class="kd">let</span> <span class="nx">clientHeight</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">clientHeight</span><span class="p">;</span>

  <span class="nx">scrollHeight</span> <span class="o">-=</span> <span class="mi">100</span><span class="p">;</span> <span class="c1">// 스크롤이 맨 끝 지점(100)에 왔을때</span>

  <span class="k">if</span> <span class="p">(</span><span class="nx">scrollTop</span> <span class="o">+</span> <span class="nx">clientHeight</span> <span class="o">&gt;=</span> <span class="nx">scrollHeight</span> <span class="o">&amp;&amp;</span> <span class="nx">isLoading</span> <span class="o">===</span> <span class="kc">false</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">poolSaveData</span><span class="p">();</span>
  <span class="p">}</span>
<span class="p">},</span> <span class="p">[</span><span class="nx">isLoading</span><span class="p">]);</span>

<span class="nx">useEffect</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">"</span><span class="s2">scroll</span><span class="dl">"</span><span class="p">,</span> <span class="nx">infiniteScroll</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span> <span class="c1">// 스크롤 이벤트 등록</span>
  <span class="k">return</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="nb">window</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="dl">"</span><span class="s2">scroll</span><span class="dl">"</span><span class="p">,</span> <span class="nx">infiniteScroll</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span> <span class="c1">//스크롤 이벤트 삭제</span>
<span class="p">},</span> <span class="p">[</span><span class="nx">infiniteScroll</span><span class="p">]);</span>
</code></pre></div></div>

<hr />

<h3 id="참고-했던-사이트-">참고 했던 사이트 🖥</h3>

<ul>
  <li>
    <p><a href="https://kingso.netlify.app/posts/react-infinite-scroll/">https://kingso.netlify.app/posts/react-infinite-scroll/</a></p>
  </li>
  <li>
    <p><a href="https://chaechaes-itlab.tistory.com/4?category=966493">https://chaechaes-itlab.tistory.com/4?category=966493</a></p>
  </li>
  <li>
    <p><a href="https://velog.io/@dev_marco/%EB%AC%B4%ED%95%9C-%EC%8A%A4%ED%81%AC%EB%A1%A4Infinite-Scroll">https://velog.io/@dev_marco/%EB%AC%B4%ED%95%9C-%EC%8A%A4%ED%81%AC%EB%A1%A4Infinite-Scroll</a></p>
  </li>
</ul>

<hr />
:ET